{"ast":null,"code":"var _jsxFileName = \"/Users/meliadmin/reactUdemy/05-hook-app/src/02-useEffect/MultipleCustomHooks.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCounter } from '../hooks/useCounter';\nimport { useFetch } from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MultipleCustomHooks = () => {\n  _s();\n  const {\n    counter\n  } = useCounter();\n  const {\n    data,\n    isLoading,\n    hasError\n  } = useFetch('https://www.breakingbadapi.com/api/quotes/1');\n\n  // Aqui hago doble negacion que es un condicional, -- !!\n  // compruebo que la data no tenga valor (Sea distinto a false) -- data &&\n  // Ejecuto una sentoncia que toma el primer valor de la data -- data[0]\n  //Ese procedimiento me permiten obtener las claver con la desestructuracion de data\n  const {\n    author,\n    quote\n  } = !!data && data[0];\n  console.log({\n    data,\n    isLoading,\n    hasError\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Breacking Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: \"bloquote text-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: [\" \", quote, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"blockquote-footer\",\n        children: [\" \", author, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"Nex Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MultipleCustomHooks, \"t9j58pABMSfs1Vl5n+EwFu3bXCQ=\", false, function () {\n  return [useCounter, useFetch];\n});\n_c = MultipleCustomHooks;\nvar _c;\n$RefreshReg$(_c, \"MultipleCustomHooks\");","map":{"version":3,"names":["React","useCounter","useFetch","MultipleCustomHooks","counter","data","isLoading","hasError","author","quote","console","log"],"sources":["/Users/meliadmin/reactUdemy/05-hook-app/src/02-useEffect/MultipleCustomHooks.jsx"],"sourcesContent":["import React from 'react'\nimport { useCounter } from '../hooks/useCounter'\nimport { useFetch } from '../hooks/useFetch'\n\nexport const MultipleCustomHooks = () => {\n\n    const { counter } = useCounter()\n  \n    const { data, isLoading, hasError } = useFetch('https://www.breakingbadapi.com/api/quotes/1')\n\n    // Aqui hago doble negacion que es un condicional, -- !!\n    // compruebo que la data no tenga valor (Sea distinto a false) -- data &&\n    // Ejecuto una sentoncia que toma el primer valor de la data -- data[0]\n    //Ese procedimiento me permiten obtener las claver con la desestructuracion de data\n    const { author, quote } = !!data && data[0]\n  \n    console.log({data, isLoading, hasError})\n    return (\n    <>\n        <h1>Breacking Bad</h1>\n        <hr />\n\n        {\n            ( isLoading ) ?\n                <div className='alert alert-info text-center' >\n                    loading...\n                </div>\n            :\n                <blockquote className='bloquote text-end' >\n                    <p className='mb-1' > { quote } </p>\n                    <footer className='blockquote-footer' > { author } </footer>\n                </blockquote>\n        }\n        <button className='btn btn-primary' >\n            Nex Quote\n        </button>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,QAAQ,QAAQ,mBAAmB;AAAA;AAAA;AAE5C,OAAO,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAErC,MAAM;IAAEC;EAAQ,CAAC,GAAGH,UAAU,EAAE;EAEhC,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGL,QAAQ,CAAC,6CAA6C,CAAC;;EAE7F;EACA;EACA;EACA;EACA,MAAM;IAAEM,MAAM;IAAEC;EAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;EAE3CK,OAAO,CAACC,GAAG,CAAC;IAACN,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,CAAC;EACxC,oBACA;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA;MAAA;MAAA;IAAA,QAAM,EAGAD,SAAS,gBACP;MAAK,SAAS,EAAC,8BAA8B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvC,gBAEN;MAAY,SAAS,EAAC,mBAAmB;MAAA,wBACrC;QAAG,SAAS,EAAC,MAAM;QAAA,gBAAKG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACpC;QAAQ,SAAS,EAAC,mBAAmB;QAAA,gBAAKD,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD,eAErB;MAAQ,SAAS,EAAC,iBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1B;EAAA,gBACV;AAEP,CAAC;AAAA,GAlCYL,mBAAmB;EAAA,QAERF,UAAU,EAEQC,QAAQ;AAAA;AAAA,KAJrCC,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}