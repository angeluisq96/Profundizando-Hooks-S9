{"ast":null,"code":"var _jsxFileName = \"/Users/meliadmin/reactUdemy/05-hook-app/src/02-useEffect/MultipleCustomHooks.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCounter, useFetch } from '../hooks/index';\nimport { LoadingQuote } from './LoadingQuote';\nimport { Quote } from './Quote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MultipleCustomHooks = () => {\n  _s();\n  const {\n    counter,\n    increment\n  } = useCounter(1);\n  console.log(counter);\n  const {\n    data,\n    isLoading,\n    hasError\n  } = useFetch('https://www.breakingbadapi.com/api/quotes/' + counter);\n\n  // Aqui hago doble negacion que es un condicional, -- !!\n  // compruebo que la data no tenga valor (Sea distinto a false) -- data &&\n  // Ejecuto una sentoncia que toma el primer valor de la data -- data[0]\n  // Ese procedimiento me permiten obtener las claver con la desestructuracion de data\n  const {\n    author,\n    quote\n  } = !!data && data[0];\n  console.log({\n    data,\n    isLoading,\n    hasError\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Breacking Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(LoadingQuote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => increment(),\n      disabled: isLoading,\n      children: \"Next Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MultipleCustomHooks, \"0nk/cuMmmeewCllYLxtsJDQlvxw=\", false, function () {\n  return [useCounter, useFetch];\n});\n_c = MultipleCustomHooks;\nvar _c;\n$RefreshReg$(_c, \"MultipleCustomHooks\");","map":{"version":3,"names":["React","useCounter","useFetch","LoadingQuote","Quote","MultipleCustomHooks","counter","increment","console","log","data","isLoading","hasError","author","quote"],"sources":["/Users/meliadmin/reactUdemy/05-hook-app/src/02-useEffect/MultipleCustomHooks.jsx"],"sourcesContent":["import React from 'react'\nimport { useCounter, useFetch } from '../hooks/index'\nimport { LoadingQuote } from './LoadingQuote';\nimport { Quote } from './Quote';\n\nexport const MultipleCustomHooks = () => {\n\n    const { counter, increment } = useCounter(1) ;\n\n    console.log(counter)\n  \n    const { data, isLoading, hasError } = useFetch('https://www.breakingbadapi.com/api/quotes/' + counter )\n\n    // Aqui hago doble negacion que es un condicional, -- !!\n    // compruebo que la data no tenga valor (Sea distinto a false) -- data &&\n    // Ejecuto una sentoncia que toma el primer valor de la data -- data[0]\n    // Ese procedimiento me permiten obtener las claver con la desestructuracion de data\n    const { author, quote } = !!data && data[0]\n  \n    console.log({data, isLoading, hasError})\n    return (\n    <>\n        <h1>Breacking Bad</h1>\n        <hr />\n\n        {\n            ( isLoading ) ?\n                <LoadingQuote />\n            :\n                <Quote />\n        }\n        <button \n        className='btn btn-primary' \n        onClick={ () => increment() } \n        disabled={ isLoading }  >\n            Next Quote\n        </button>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,QAAQ,QAAQ,gBAAgB;AACrD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,KAAK,QAAQ,SAAS;AAAC;AAAA;AAEhC,OAAO,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAErC,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGN,UAAU,CAAC,CAAC,CAAC;EAE5CO,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EAEpB,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGV,QAAQ,CAAC,4CAA4C,GAAGI,OAAO,CAAE;;EAEvG;EACA;EACA;EACA;EACA,MAAM;IAAEO,MAAM;IAAEC;EAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;EAE3CF,OAAO,CAACC,GAAG,CAAC;IAACC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,CAAC;EACxC,oBACA;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA;MAAA;MAAA;IAAA,QAAM,EAGAD,SAAS,gBACP,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEhB,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAEjB;MACA,SAAS,EAAC,iBAAiB;MAC3B,OAAO,EAAG,MAAMJ,SAAS,EAAI;MAC7B,QAAQ,EAAGI,SAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEb;EAAA,gBACV;AAEP,CAAC;AAAA,GAlCYN,mBAAmB;EAAA,QAEGJ,UAAU,EAIHC,QAAQ;AAAA;AAAA,KANrCG,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}